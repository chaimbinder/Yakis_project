version: '3.8'
services:
  api_users:
    build:
      context: ./users
      dockerfile: Dockerfile
    container_name: users
    ports:
      - 8000:8000
    environment:
      - DB_HOST=${DB_HOST}
      - ENV_USER=${ENV_USER}
      - ENV_PASSWORD=${ENV_PASSWORD}
      - ENV_DB=${ENV_DB}
      - MYPORT_TRANSITIONS=${MYPORT_TRANSITIONS}
      - MYPORT_USERS=${MYPORT_USERS}
      - users_container_name={users_container_name}
    volumes:
      - ./users:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
  api_transitions:
    build:
      context: ./transitions
      dockerfile: Dockerfile
    container_name: transitions
    ports:
      - 5000:5000
    environment:
      - DB_HOST=${DB_HOST}
      - ENV_USER=${ENV_USER}
      - ENV_PASSWORD=${ENV_PASSWORD}
      - ENV_DB=${ENV_DB}
      - MYPORT_TRANSITIONS=${MYPORT_TRANSITIONS}
      - MYPORT_USERS=${MYPORT_USERS}
      - users_container_name=${users_container_name}
    volumes:
      - ./transitions:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
  db:
    image: postgres:14.1-alpine
    container_name: db_tst
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER={POSTGRES_USER}
      - POSTGRES_PASSWORD={POSTGRES_PASSWORD}
      - POSTGRES_DB={POSTGRES_DB}
    volumes:
      - nps_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
volumes:
  nps_data: {}
